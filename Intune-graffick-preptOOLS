#Convertisseur d'exe&Msi pour Intune

# -> Placer les sources dans le dossier du script
#####
#####
#####
#####
#####
###############################

Add-Type -AssemblyName System.Windows.Forms

Add-Type -AssemblyName System.Drawing


$form = New-Object System.Windows.Forms.Form

$form.Font =  [System.Drawing.Font]::new("Comic Sans MS", 12, [System.Drawing.FontStyle]::Bold)

$form.Text = 'VERS INTUNE '

$form.Size = New-Object System.Drawing.Size(300,200)

$form.StartPosition = 'CenterScreen'

$form.BackColor = '#aed6f1'

$label = New-Object System.Windows.Forms.Label

$label.Location = New-Object System.Drawing.Point(10,5)

$label.Size = New-Object System.Drawing.Size(280,30)


$label.Text = 'Chemin des sources ?'

$form.Controls.Add($label)


$textBox = New-Object System.Windows.Forms.TextBox

$textBox.Location = New-Object System.Drawing.Point(10,30)

$textBox.Size = New-Object System.Drawing.Size(260,20)

$form.Controls.Add($textBox)

## --------> Recherche Button *

$buttonBrowse = New-Object System.Windows.Forms.Button

$buttonBrowse.Location = New-Object System.Drawing.Point(10,80)

$buttonBrowse.Size = New-Object System.Drawing.Size(90,30)

$buttonBrowse.Text = 'Browse'

$buttonBrowse.Add_Click({

    $openFileDialog = New-Object System.Windows.Forms.OpenFileDialog

    $openFileDialog.filter = 'Executable files (*.exe)|*.exe|MSI files (*.msi)|*.msi'

    If ($openFileDialog.ShowDialog() -eq [System.Windows.Forms.DialogResult]::OK){

        $textBox.Text = $openFileDialog.FileName

    }

})

$form.Controls.Add($buttonBrowse)

#---------> Converssion button *

$buttonConvert = New-Object System.Windows.Forms.Button

$buttonConvert.Location = New-Object System.Drawing.Point(130,80)

$buttonConvert.Size = New-Object System.Drawing.Size(90,30)

$buttonConvert.Text = 'KonVERT'

$buttonConvert.Add_Click({

    $sourceFile = $textBox.Text

    If (-Not (Test-Path $sourceFile)) {

        [System.Windows.Forms.MessageBox]::Show("File not found. Please select a valid file.", "Error", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Error)

        return

    }


    $outputFolder = Split-Path $sourceFile

    $setupFile = Split-Path $sourceFile -Leaf

    $workingDir = $outputFolder


    # Path to IntuneWinAppUtil.exe - update this path

    $intuneWinAppUtilPath = "C:\Users\$env:username\Documents\INTUNE\Microsoft-Win32-Content-Prep-Tool-master\IntuneWinAppUtil.exe"

    $params = "-c `"$outputFolder`" -s `"$setupFile`" -o `"$outputFolder`""


    If (!(Test-Path $intuneWinAppUtilPath)) {

        [System.Windows.Forms.MessageBox]::Show("IntuneWinAppUtil not found. Please ensure it is installed.", "Error", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Error)

        return

    }


    Start-Process $intuneWinAppUtilPath -ArgumentList $params -Wait -NoNewWindow

    [System.Windows.Forms.MessageBox]::Show("Conversion Completed. .intunewin file is in the source directory.", "Completed", [System.Windows.Forms.MessageBoxButtons]::OK, [System.Windows.Forms.MessageBoxIcon]::Information)

})

$form.Controls.Add($buttonConvert)


$form.ShowDialog()
